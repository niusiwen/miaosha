#thymeleaf
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false
spring.thymeleaf.content-type=text/html
spring.thymeleaf.enabled=true
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML5
# mybatis
mybatis.type-aliases-package=com.nsw.miaosha.domain
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-fetch-size=100
mybatis.configuration.default-statement-timeout=3000
mybatis.mapperLocations = classpath:com/nsw/miaosha/dao/*.xml
# druid
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/miaosha?serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=niu123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.filters=stat
spring.datasource.maxActive=2
spring.datasource.initialSize=1
spring.datasource.maxWait=60000
spring.datasource.minIdle=1
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=select 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxOpenPreparedStatements=20
#redis
redis.host=127.0.0.1
redis.port=6379
redis.timeout=3
redis.password=
redis.poolMaxTotal=10
redis.poolMaxIdle=5
redis.poolMaxWait=3

#static->spring静态资源的配置，开启客户端浏览器缓存
#spring.resources.add-mappings=true
#spring.resources.cache-period= 3600
#spring.resources.chain.cache=true 
#spring.resources.chain.enabled=true
#spring.resources.chain.gzipped=true
#spring.resources.chain.html-application-cache=true
#spring.resources.static-locations=classpath:/static/

#rabbitmq
spring.rabbitmq.host=192.168.1.211
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtual-host=/
#消费者数量
spring.rabbitmq.listener.simple.concurrency= 10
#最大的消费者数量
spring.rabbitmq.listener.simple.max-concurrency= 10
#每次从消息队列中取几条消息
spring.rabbitmq.listener.simple.prefetch= 1
#是否启动时自动启动容器
spring.rabbitmq.listener.simple.auto-startup=true
#消费者消费失败之后，重新把消息加入到消息队列中
spring.rabbitmq.listener.simple.default-requeue-rejected= false
#队列满了后 启用重试
spring.rabbitmq.template.retry.enabled=true 
#第一次和第二次尝试发布或传递消息之间的间隔(注意：springboot2.X 该时间配置应该加上单位，例如： 1s 1.5s 0s 0.001S 1h 2d 1m 1M -PT0.001S)
spring.rabbitmq.template.retry.initial-interval=1s
#最大重试次数
spring.rabbitmq.template.retry.max-attempts=3
#最大重试时间间隔(注意：springboot2.X 该时间配置应该加上单位，例如： 1s 1.5s 0s 0.001S 1h 2d 1m 1M -PT0.001S)
spring.rabbitmq.template.retry.max-interval=10s
#应用于上一重试间隔的乘数
spring.rabbitmq.template.retry.multiplier=1.0

